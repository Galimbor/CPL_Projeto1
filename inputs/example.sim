<int> b;
<float> c;

<float> test = [1];

<int> array = [50];

float a = g(3);

float g(float ricardo) {
b = null;
array[0] = 1;
return 3.0;
}


float testing()@{
<string> wtf = [5];
}{
string test = wtf[3+2];
return null;
}
>>{
wt = 3;
int wtff = ((5)) + 1;
}


float licardo(float ricardo){
int ricardo = 5;
int b = 5;
<void> lmao = [5];
<void> xpto;
<void> xpt = xpto[1];
+5;
+5.5;
+lmao;
float leggo = +5;
int liuk = +5.0;
bool barak = ~false;
bool obama = ~1.0;
<int> calao =  ?returnvoid();
<int> calo2 = ?test;
<int> calo3 = ?b;
<int> move = calo3 + 5;
<int> move2 = xpto + 5;
bool letsgo =  test == move;
bool letgo = move == move2;
bool let = xpto == move;
bool le = xpto == xpto;
}
int ricardo = 2;
float laoul = ricardo;

void returnvoid()
{
    return;
}

void tester(){
return;
}


float s(int ricardo) {
return 1;

}


int d = 1;
float x = 3 % 1;

int f(int x, float y)
{
    int a;
    int b;
    <void> c = null;
    funcao(a, b, c);
    bool z = true;
    int g =1;
    int i = 3;
    int k = 6;
    int j,l;
    return x;
}

int alg(int n, <string> args) {
while 3 do
{
3+3;
leave;
}
return 1;
}


void nula() {
a=f(1,2.0);
}


void funcao(int artur, int ricardo, <string> jean) {
int a;
a=1;
<void> vazio;
vazio = null;
return;
}

int testeJean(int artur) {
int a;
a=1;
return a;
}